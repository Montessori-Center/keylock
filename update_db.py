"""
–ú–∏–≥—Ä–∞—Ü–∏—è: –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ ad_group_id –≤ serp_logs
"""
import pymysql
import pymysql.cursors
from backend.config import Config

def get_db_connection():
    try:
        connection = pymysql.connect(
            host=Config.DB_HOST,
            port=Config.DB_PORT,
            user=Config.DB_USER,
            password=Config.DB_PASSWORD,
            database=Config.DB_NAME,
            cursorclass=pymysql.cursors.DictCursor
        )
        return connection
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")
        raise

def main():
    print("=" * 70)
    print("üîß –ú–∏–≥—Ä–∞—Ü–∏—è: –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ ad_group_id –≤ serp_logs")
    print("=" * 70)
    
    connection = None
    
    try:
        connection = get_db_connection()
        cursor = connection.cursor()
        
        print("\n‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å–ø–µ—à–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–ª–æ–Ω–∫–∏
        cursor.execute("""
            SELECT COUNT(*) as cnt 
            FROM INFORMATION_SCHEMA.COLUMNS 
            WHERE TABLE_SCHEMA = %s
            AND TABLE_NAME = 'serp_logs'
            AND COLUMN_NAME = 'ad_group_id'
        """, (Config.DB_NAME,))
        
        result = cursor.fetchone()
        
        if result['cnt'] == 0:
            print("\n‚ûï –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É ad_group_id...")
            cursor.execute("""
                ALTER TABLE serp_logs 
                ADD COLUMN ad_group_id INT DEFAULT NULL COMMENT 'ID –≥—Ä—É–ø–ø—ã –æ–±—ä—è–≤–ª–µ–Ω–∏–π' AFTER keyword_id,
                ADD INDEX idx_ad_group_id (ad_group_id)
            """)
            connection.commit()
            print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞")
            
            # –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
            print("\nüîÑ –ó–∞–ø–æ–ª–Ω—è–µ–º ad_group_id –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–ø–∏—Å–µ–π...")
            cursor.execute("""
                UPDATE serp_logs sl
                INNER JOIN keywords k ON sl.keyword_id = k.id
                SET sl.ad_group_id = k.ad_group_id
                WHERE sl.ad_group_id IS NULL
            """)
            updated = cursor.rowcount
            connection.commit()
            print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {updated}")
        else:
            print("\n‚úÖ –ö–æ–ª–æ–Ω–∫–∞ ad_group_id —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        cursor.execute("""
            SELECT 
                COUNT(*) as total,
                COUNT(ad_group_id) as with_ad_group,
                COUNT(*) - COUNT(ad_group_id) as without_ad_group
            FROM serp_logs
        """)
        stats = cursor.fetchone()
        
        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ serp_logs:")
        print(f"   –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {stats['total']}")
        print(f"   –° ad_group_id: {stats['with_ad_group']}")
        print(f"   –ë–µ–∑ ad_group_id: {stats['without_ad_group']}")
        
        print("\n" + "=" * 70)
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("=" * 70)
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        if connection:
            connection.rollback()
        import traceback
        traceback.print_exc()
    finally:
        if connection:
            cursor.close()
            connection.close()

if __name__ == "__main__":
    main()