# backend/utils/serp_competitors_helper.py
"""
–í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞–º–∏ –≤ SERP-–∞–Ω–∞–ª–∏–∑–µ
"""

def get_campaign_domain(campaign_id: int, connection) -> str:
    """
    –ü–æ–ª—É—á–∞–µ—Ç –¥–æ–º–µ–Ω —Å–∞–π—Ç–∞ –¥–ª—è –∫–∞–º–ø–∞–Ω–∏–∏ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã campaign_sites
    """
    try:
        cursor = connection.cursor()
        cursor.execute("""
            SELECT domain 
            FROM campaign_sites 
            WHERE campaign_id = %s
        """, (campaign_id,))
        
        result = cursor.fetchone()
        cursor.close()
        
        if result and result['domain']:
            domain = result['domain'].lower()
            if domain.startswith('www.'):
                domain = domain[4:]
            return domain
        
        return None
        
    except Exception as e:
        print(f"‚ùå Error getting campaign domain: {e}")
        return None


def save_serp_competitors(connection, serp_analysis_id: int, organic_results: list, paid_results: list, maps_results: list, campaign_id: int):
    """
    –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –∏–∑ SERP-–∞–Ω–∞–ª–∏–∑–∞ –≤ –ë–î —Å —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π —Ñ–ª–∞–≥–∞ is_new
    """
    cursor = connection.cursor()
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–æ–º–µ–Ω –Ω–∞—à–µ–≥–æ —Å–∞–π—Ç–∞
        our_domain = get_campaign_domain(campaign_id, connection)
        if our_domain:
            our_domain = our_domain.lower()
            print(f"   üìå –ù–∞—à –¥–æ–º–µ–Ω: {our_domain}")
        
        # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –¥–æ–º–µ–Ω—ã –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        all_domains = []
        
        # –û—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        for item in organic_results:
            domain = item.get('domain', '').lower().strip()
            if domain and domain != our_domain:
                all_domains.append({
                    'domain': domain,
                    'position': item.get('organic_position'),
                    'url': item.get('url', ''),
                    'title': item.get('title', ''),
                    'result_type': 'organic'
                })
        
        # –†–µ–∫–ª–∞–º–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        for item in paid_results:
            domain = item.get('domain', '').lower().strip()
            if domain and domain != our_domain:
                all_domains.append({
                    'domain': domain,
                    'position': item.get('position'),
                    'url': item.get('url', ''),
                    'title': item.get('title', ''),
                    'result_type': 'paid'
                })
        
        # –ö–∞—Ä—Ç—ã
        for item in maps_results:
            domain = item.get('domain', '').lower().strip()
            if domain and domain != our_domain:
                all_domains.append({
                    'domain': domain,
                    'position': item.get('position'),
                    'url': item.get('url', ''),
                    'title': item.get('title', ''),
                    'result_type': 'maps'
                })
        
        unique_domains = list(set([d['domain'] for d in all_domains]))
        print(f"   üìä –ù–∞–π–¥–µ–Ω–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –¥–æ–º–µ–Ω–æ–≤: {len(unique_domains)}")
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –¥–æ–º–µ–Ω
        for domain in unique_domains:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –¥–æ–º–µ–Ω
            cursor.execute("SELECT id, is_new FROM competitor_schools WHERE domain = %s", (domain,))
            existing = cursor.fetchone()
            
            if not existing:
                # ‚úÖ –ù–û–í–´–ô –î–û–ú–ï–ù - –¥–æ–±–∞–≤–ª—è–µ–º —Å is_new=TRUE
                try:
                    cursor.execute("""
                        INSERT INTO competitor_schools (domain, org_type, is_new, created_at, updated_at)
                        VALUES (%s, '–®–∫–æ–ª–∞', TRUE, NOW(), NOW())
                    """, (domain,))
                    competitor_id = cursor.lastrowid
                    print(f"      ‚úÖ –ù–û–í–´–ô –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω: {domain} (id={competitor_id}, is_new=TRUE)")
                except Exception as insert_error:
                    print(f"      ‚ö†Ô∏è –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è {domain}: {insert_error}")
                    # –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ - –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π
                    cursor.execute("SELECT id FROM competitor_schools WHERE domain = %s", (domain,))
                    existing = cursor.fetchone()
                    if existing:
                        competitor_id = existing['id']
                    else:
                        continue
            else:
                competitor_id = existing['id']
                is_new_flag = existing.get('is_new', False)
                print(f"      ‚ÑπÔ∏è –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç: {domain} (id={competitor_id}, is_new={is_new_flag})")
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å–∏ –æ –≤—Å–µ—Ö –ø–æ—è–≤–ª–µ–Ω–∏—è—Ö —ç—Ç–æ–≥–æ –¥–æ–º–µ–Ω–∞
            domain_items = [d for d in all_domains if d['domain'] == domain]
            for item in domain_items:
                try:
                    cursor.execute("""
                        INSERT INTO serp_competitor_appearances 
                        (serp_analysis_id, competitor_id, position, result_type, url, title, created_at)
                        VALUES (%s, %s, %s, %s, %s, %s, NOW())
                    """, (
                        serp_analysis_id,
                        competitor_id,
                        item['position'],
                        item['result_type'],
                        item['url'],
                        item['title']
                    ))
                except Exception as appearance_error:
                    print(f"      ‚ö†Ô∏è –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è appearance –¥–ª—è {domain}: {appearance_error}")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–æ—Å—Ç—å –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
        update_competitors_competitiveness(connection)
        
        print(f"   ‚úÖ –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã –∏–∑ SERP —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã, –∫–æ–º–º–∏—Ç...")
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤: {e}")
        import traceback
        traceback.print_exc()
        raise  # –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–∞–ª—å—à–µ
    finally:
        cursor.close()


def update_competitors_competitiveness(connection):
    """
    –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–æ—Å—Ç–∏ –¥–ª—è –≤—Å–µ—Ö –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤
    """
    cursor = connection.cursor()
    
    try:
        cursor.execute("""
            UPDATE competitor_schools c
            SET 
                competitiveness = (
                    SELECT COUNT(DISTINCT sa.keyword_id)
                    FROM serp_competitor_appearances sca
                    JOIN serp_analysis_history sa ON sca.serp_analysis_id = sa.id
                    WHERE sca.competitor_id = c.id
                    AND sa.id IN (
                        SELECT MAX(id) 
                        FROM serp_analysis_history 
                        GROUP BY keyword_id
                    )
                ),
                last_seen_at = (
                    SELECT MAX(sa.analysis_date)
                    FROM serp_competitor_appearances sca
                    JOIN serp_analysis_history sa ON sca.serp_analysis_id = sa.id
                    WHERE sca.competitor_id = c.id
                ),
                updated_at = NOW()
        """)
        updated = cursor.rowcount
        print(f"   üìä –û–±–Ω–æ–≤–ª–µ–Ω–∞ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–æ—Å—Ç—å –¥–ª—è {updated} –∑–∞–ø–∏—Å–µ–π")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–æ—Å—Ç–∏: {e}")
        raise
    finally:
        cursor.close()