import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

import pymysql
from config import Config

def add_is_new_field():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª–µ is_new –≤ —Ç–∞–±–ª–∏—Ü—É keywords"""
    try:
        connection = pymysql.connect(
            host=Config.DB_HOST,
            port=Config.DB_PORT,
            user=Config.DB_USER,
            password=Config.DB_PASSWORD,
            database=Config.DB_NAME
        )
        cursor = connection.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø–æ–ª–µ
        cursor.execute("SHOW COLUMNS FROM keywords LIKE 'is_new'")
        result = cursor.fetchone()
        
        if not result:
            print("üìù –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ is_new –≤ —Ç–∞–±–ª–∏—Ü—É keywords...")
            cursor.execute("""
                ALTER TABLE keywords 
                ADD COLUMN is_new BOOLEAN DEFAULT FALSE 
                AFTER labels
            """)
            connection.commit()
            print("‚úÖ –ü–æ–ª–µ is_new –¥–æ–±–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
        else:
            print("‚ÑπÔ∏è –ü–æ–ª–µ is_new —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        cursor.close()
        connection.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—è: {e}")

if __name__ == "__main__":
    add_is_new_field()