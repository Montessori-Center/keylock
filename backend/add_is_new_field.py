"""
–ú–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—è is_new –≤ —Ç–∞–±–ª–∏—Ü—É keywords
–ó–∞–ø—É—Å–∫: python3 add_is_new_field.py
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

import pymysql
from config import Config

def add_is_new_field():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª–µ is_new –≤ —Ç–∞–±–ª–∏—Ü—É keywords"""
    try:
        print("üîß –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
        connection = pymysql.connect(
            host=Config.DB_HOST,
            port=Config.DB_PORT,
            user=Config.DB_USER,
            password=Config.DB_PASSWORD,
            database=Config.DB_NAME
        )
        cursor = connection.cursor()
        print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω –∫ {Config.DB_HOST}:{Config.DB_PORT}/{Config.DB_NAME}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø–æ–ª–µ is_new
        print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—è is_new...")
        cursor.execute("SHOW COLUMNS FROM keywords LIKE 'is_new'")
        result = cursor.fetchone()
        
        if not result:
            print("üìù –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ is_new –≤ —Ç–∞–±–ª–∏—Ü—É keywords...")
            cursor.execute("""
                ALTER TABLE keywords 
                ADD COLUMN is_new BOOLEAN DEFAULT FALSE 
                AFTER labels
            """)
            connection.commit()
            print("‚úÖ –ü–æ–ª–µ is_new –¥–æ–±–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ª–µ –¥–æ–±–∞–≤–∏–ª–æ—Å—å
            cursor.execute("SHOW COLUMNS FROM keywords LIKE 'is_new'")
            result = cursor.fetchone()
            if result:
                print(f"‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ: –ø–æ–ª–µ is_new —Å–æ–∑–¥–∞–Ω–æ - {result}")
            else:
                print("‚ùå –û—à–∏–±–∫–∞: –ø–æ–ª–µ is_new –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è")
        else:
            print("‚ÑπÔ∏è –ü–æ–ª–µ is_new —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            print(f"   –î–µ—Ç–∞–ª–∏ –ø–æ–ª—è: {result}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        cursor.execute("SELECT COUNT(*) as total FROM keywords")
        total = cursor.fetchone()[0]
        
        cursor.execute("SELECT COUNT(*) as new_count FROM keywords WHERE is_new = TRUE")
        new_count = cursor.fetchone()[0]
        
        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ keywords:")
        print(f"   –í—Å–µ–≥–æ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤: {total}")
        print(f"   –ù–æ–≤—ã—Ö (is_new=TRUE): {new_count}")
        
        cursor.close()
        connection.close()
        print("\n‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—è: {e}")
        import traceback
        traceback.print_exc()
        return False
    
    return True

def check_database_structure():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    try:
        print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        connection = pymysql.connect(
            host=Config.DB_HOST,
            port=Config.DB_PORT,
            user=Config.DB_USER,
            password=Config.DB_PASSWORD,
            database=Config.DB_NAME
        )
        cursor = connection.cursor()
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –ø–æ–ª—è —Ç–∞–±–ª–∏—Ü—ã keywords
        cursor.execute("DESCRIBE keywords")
        fields = cursor.fetchall()
        
        print("\nüìã –ü–æ–ª—è —Ç–∞–±–ª–∏—Ü—ã keywords:")
        for field in fields:
            field_name = field[0]
            field_type = field[1]
            is_null = field[2]
            default_val = field[4]
            print(f"   {field_name}: {field_type} {'NULL' if is_null == 'YES' else 'NOT NULL'} {f'DEFAULT {default_val}' if default_val else ''}")
        
        cursor.close()
        connection.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã: {e}")

if __name__ == "__main__":
    print("=" * 60)
    print("üöÄ –ú–∏–≥—Ä–∞—Ü–∏—è: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è is_new –≤ —Ç–∞–±–ª–∏—Ü—É keywords")
    print("=" * 60)
    
    success = add_is_new_field()
    
    if success:
        check_database_structure()
    
    print("\n" + "=" * 60)
    if success:
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: python3 app.py")
    else:
        print("‚ùå –ú–∏–≥—Ä–∞—Ü–∏—è –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î")
    print("=" * 60)