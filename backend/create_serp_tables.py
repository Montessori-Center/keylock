#!/usr/bin/env python3
# fix_serp_logs.py - –∑–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –≤ –ø–∞–ø–∫–µ backend

import pymysql
from config import Config

def fix_serp_logs_table():
    """–ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã serp_logs —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π"""
    connection = None
    try:
        connection = pymysql.connect(
            host=Config.DB_HOST,
            port=Config.DB_PORT,
            user=Config.DB_USER,
            password=Config.DB_PASSWORD,
            database=Config.DB_NAME
        )
        cursor = connection.cursor()
        
        print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã serp_logs...")
        
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é —Ç–∞–±–ª–∏—Ü—É –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        cursor.execute("DROP TABLE IF EXISTS serp_logs")
        print("‚úÖ –°—Ç–∞—Ä–∞—è —Ç–∞–±–ª–∏—Ü–∞ —É–¥–∞–ª–µ–Ω–∞")
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π (TEXT –≤–º–µ—Å—Ç–æ JSON –¥–ª—è MySQL 5.7)
        cursor.execute("""
        CREATE TABLE serp_logs (
            id INT AUTO_INCREMENT PRIMARY KEY,
            keyword_id INT,
            keyword_text VARCHAR(500),
            location_code INT,
            language_code VARCHAR(10),
            device VARCHAR(50),
            depth INT,
            total_items INT DEFAULT 0,
            organic_count INT DEFAULT 0,
            paid_count INT DEFAULT 0,
            maps_count INT DEFAULT 0,
            shopping_count INT DEFAULT 0,
            has_ads BOOLEAN DEFAULT FALSE,
            has_maps BOOLEAN DEFAULT FALSE,
            has_our_site BOOLEAN DEFAULT FALSE,
            has_school_sites BOOLEAN DEFAULT FALSE,
            intent_type VARCHAR(50),
            school_percentage DECIMAL(5,2),
            cost DECIMAL(10,4),
            raw_response TEXT,
            parsed_items TEXT,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            FOREIGN KEY (keyword_id) REFERENCES keywords(id) ON DELETE SET NULL,
            INDEX idx_keyword_id (keyword_id),
            INDEX idx_created_at (created_at)
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
        """)
        print("‚úÖ –ù–æ–≤–∞—è —Ç–∞–±–ª–∏—Ü–∞ serp_logs —Å–æ–∑–¥–∞–Ω–∞ —Å TEXT –ø–æ–ª—è–º–∏")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        cursor.execute("DESCRIBE serp_logs")
        columns = cursor.fetchall()
        print("\nüìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã serp_logs:")
        for col in columns:
            print(f"  - {col[0]}: {col[1]}")
        
        connection.commit()
        cursor.close()
        
        print("\n‚úÖ –¢–∞–±–ª–∏—Ü–∞ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∞!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
        if connection:
            connection.rollback()
    finally:
        if connection:
            connection.close()

def test_insert():
    """–¢–µ—Å—Ç –≤—Å—Ç–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö"""
    connection = None
    try:
        connection = pymysql.connect(
            host=Config.DB_HOST,
            port=Config.DB_PORT,
            user=Config.DB_USER,
            password=Config.DB_PASSWORD,
            database=Config.DB_NAME
        )
        cursor = connection.cursor()
        
        print("\nüß™ –¢–µ—Å—Ç –≤—Å—Ç–∞–≤–∫–∏...")
        
        # –¢–µ—Å—Ç–æ–≤–∞—è –≤—Å—Ç–∞–≤–∫–∞
        cursor.execute("""
            INSERT INTO serp_logs (
                keyword_text, location_code, language_code,
                device, depth, total_items, organic_count,
                has_ads, has_our_site, intent_type,
                school_percentage, cost, raw_response, parsed_items
            ) VALUES (
                '—Ç–µ—Å—Ç', 2804, 'ru', 'desktop', 10, 10, 10,
                FALSE, TRUE, '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π',
                0.0, 0.003, '{"test": "data"}', '{"organic": []}'
            )
        """)
        
        connection.commit()
        print("‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –≤—Å—Ç–∞–≤–ª–µ–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º
        cursor.execute("SELECT COUNT(*) as cnt FROM serp_logs")
        result = cursor.fetchone()
        print(f"üìä –ó–∞–ø–∏—Å–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ: {result[0]}")
        
        cursor.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {str(e)}")
        if connection:
            connection.rollback()
    finally:
        if connection:
            connection.close()

if __name__ == "__main__":
    fix_serp_logs_table()
    test_insert()