#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤—ã—Ö —Ç–∞–±–ª–∏—Ü –¥–ª—è SERP –∞–Ω–∞–ª–∏–∑–∞
–ó–∞–ø—É—Å–∫–∞—Ç—å –∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ backend: python3 create_serp_tables.py
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from config import Config
import pymysql

def create_serp_tables():
    """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ç–∞–±–ª–∏—Ü –¥–ª—è SERP —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞"""
    
    connection = None
    try:
        print("üîß –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î...")
        connection = pymysql.connect(
            host=Config.DB_HOST,
            port=Config.DB_PORT,
            user=Config.DB_USER,
            password=Config.DB_PASSWORD,
            database=Config.DB_NAME
        )
        cursor = connection.cursor()
        
        print("üìã –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã campaign_sites...")
        
        # –¢–∞–±–ª–∏—Ü–∞ —Å–∞–π—Ç–æ–≤ –∫–∞–º–ø–∞–Ω–∏–π (–Ω–∞—à–∏ —Å–∞–π—Ç—ã)
        cursor.execute("""
            CREATE TABLE IF NOT EXISTS campaign_sites (
                id INT AUTO_INCREMENT PRIMARY KEY,
                campaign_id INT NOT NULL UNIQUE,
                site_url VARCHAR(255),
                domain VARCHAR(255),
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
                FOREIGN KEY (campaign_id) REFERENCES campaigns(id) ON DELETE CASCADE,
                INDEX idx_campaign_domain (campaign_id, domain)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
        """)
        print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ campaign_sites —Å–æ–∑–¥–∞–Ω–∞/–æ–±–Ω–æ–≤–ª–µ–Ω–∞")
        
        print("üìã –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã school_sites...")
        
        # –¢–∞–±–ª–∏—Ü–∞ —Å–∞–π—Ç–æ–≤ —à–∫–æ–ª-–∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤
        cursor.execute("""
            CREATE TABLE IF NOT EXISTS school_sites (
                id INT AUTO_INCREMENT PRIMARY KEY,
                name VARCHAR(255) NOT NULL COMMENT '–ù–∞–∑–≤–∞–Ω–∏–µ —à–∫–æ–ª—ã/–∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞',
                domain VARCHAR(255) NOT NULL UNIQUE COMMENT '–î–æ–º–µ–Ω –±–µ–∑ www',
                full_url VARCHAR(500) COMMENT '–ü–æ–ª–Ω—ã–π URL —Å–∞–π—Ç–∞',
                is_active BOOLEAN DEFAULT TRUE COMMENT '–ê–∫—Ç–∏–≤–µ–Ω –ª–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏',
                category VARCHAR(100) COMMENT '–ö–∞—Ç–µ–≥–æ—Ä–∏—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞',
                notes TEXT COMMENT '–ó–∞–º–µ—Ç–∫–∏',
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
                INDEX idx_domain (domain),
                INDEX idx_active (is_active)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
        """)
        print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ school_sites —Å–æ–∑–¥–∞–Ω–∞/–æ–±–Ω–æ–≤–ª–µ–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ –∫–æ–ª–æ–Ω–∫–∏ –≤ keywords –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
        print("üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã keywords...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–ª–æ–Ω–∫–∏ is_new
        cursor.execute("""
            SELECT COUNT(*) 
            FROM information_schema.COLUMNS 
            WHERE TABLE_SCHEMA = %s 
            AND TABLE_NAME = 'keywords' 
            AND COLUMN_NAME = 'is_new'
        """, (Config.DB_NAME,))
        
        if cursor.fetchone()[0] == 0:
            print("   –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É is_new...")
            cursor.execute("""
                ALTER TABLE keywords 
                ADD COLUMN is_new BOOLEAN DEFAULT FALSE 
                COMMENT '–§–ª–∞–≥ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏' 
                AFTER labels
            """)
            print("   ‚úÖ –ö–æ–ª–æ–Ω–∫–∞ is_new –¥–æ–±–∞–≤–ª–µ–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–ª–æ–Ω–∫–∏ batch_color
        cursor.execute("""
            SELECT COUNT(*) 
            FROM information_schema.COLUMNS 
            WHERE TABLE_SCHEMA = %s 
            AND TABLE_NAME = 'keywords' 
            AND COLUMN_NAME = 'batch_color'
        """, (Config.DB_NAME,))
        
        if cursor.fetchone()[0] == 0:
            print("   –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É batch_color...")
            cursor.execute("""
                ALTER TABLE keywords 
                ADD COLUMN batch_color VARCHAR(20) 
                COMMENT '–¶–≤–µ—Ç –ø–∞—Ä—Ç–∏–∏ –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è' 
                AFTER is_new
            """)
            print("   ‚úÖ –ö–æ–ª–æ–Ω–∫–∞ batch_color –¥–æ–±–∞–≤–ª–µ–Ω–∞")
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
        print("\nüìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–æ–≤ –¥–∞–Ω–Ω—ã—Ö...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –¥–∞–Ω–Ω—ã–µ –≤ campaign_sites
        cursor.execute("SELECT COUNT(*) FROM campaign_sites")
        if cursor.fetchone()[0] == 0:
            # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—É—é –∫–∞–º–ø–∞–Ω–∏—é
            cursor.execute("SELECT id, name FROM campaigns LIMIT 1")
            campaign = cursor.fetchone()
            
            if campaign:
                campaign_id = campaign[0]
                campaign_name = campaign[1]
                
                # –î–æ–±–∞–≤–ª—è–µ–º —Å–∞–π—Ç –¥–ª—è –∫–∞–º–ø–∞–Ω–∏–∏ (–ø—Ä–∏–º–µ—Ä)
                if 'montessori' in campaign_name.lower():
                    cursor.execute("""
                        INSERT INTO campaign_sites (campaign_id, site_url, domain) 
                        VALUES (%s, 'https://montessori.ua', 'montessori.ua')
                    """, (campaign_id,))
                    print(f"   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –ø—Ä–∏–º–µ—Ä —Å–∞–π—Ç–∞ –¥–ª—è –∫–∞–º–ø–∞–Ω–∏–∏ {campaign_name}")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–º–µ—Ä—ã —Å–∞–π—Ç–æ–≤ —à–∫–æ–ª-–∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤
        cursor.execute("SELECT COUNT(*) FROM school_sites")
        if cursor.fetchone()[0] == 0:
            example_schools = [
                ('–ú—É–∑—ã–∫–∞–ª—å–Ω–∞—è —à–∫–æ–ª–∞ Jam', 'jam.ua', 'https://jam.ua', True, '–ú—É–∑—ã–∫–∞–ª—å–Ω–∞—è —à–∫–æ–ª–∞', '–û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç'),
                ('–ê—Ä—Ç-—à–∫–æ–ª–∞ –ú–æ–Ω—Ç–µ—Å—Å–æ—Ä–∏', 'artschool.com.ua', 'https://artschool.com.ua', True, '–ê—Ä—Ç-—à–∫–æ–ª–∞', ''),
                ('–ú—É–∑—ã–∫–∞–ª—å–Ω–∞—è –∞–∫–∞–¥–µ–º–∏—è', 'music-academy.kiev.ua', 'https://music-academy.kiev.ua', True, '–ú—É–∑—ã–∫–∞–ª—å–Ω–∞—è —à–∫–æ–ª–∞', ''),
                ('–®–∫–æ–ª–∞ –≤–æ–∫–∞–ª–∞ Voice', 'voiceschool.com.ua', 'https://voiceschool.com.ua', True, '–í–æ–∫–∞–ª—å–Ω–∞—è —à–∫–æ–ª–∞', ''),
                ('–ì–∏—Ç–∞—Ä–Ω–∞—è —à–∫–æ–ª–∞', 'guitar-school.kiev.ua', 'https://guitar-school.kiev.ua', True, '–ú—É–∑—ã–∫–∞–ª—å–Ω–∞—è —à–∫–æ–ª–∞', ''),
            ]
            
            for school_data in example_schools:
                try:
                    cursor.execute("""
                        INSERT INTO school_sites (name, domain, full_url, is_active, category, notes)
                        VALUES (%s, %s, %s, %s, %s, %s)
                    """, school_data)
                    print(f"   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —Å–∞–π—Ç —à–∫–æ–ª—ã: {school_data[0]}")
                except pymysql.err.IntegrityError:
                    print(f"   ‚ö†Ô∏è –°–∞–π—Ç {school_data[1]} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        connection.commit()
        
        print("\nüìä –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        cursor.execute("SELECT COUNT(*) FROM campaign_sites")
        print(f"   –°–∞–π—Ç–æ–≤ –∫–∞–º–ø–∞–Ω–∏–π: {cursor.fetchone()[0]}")
        
        cursor.execute("SELECT COUNT(*) FROM school_sites")
        print(f"   –°–∞–π—Ç–æ–≤ —à–∫–æ–ª-–∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤: {cursor.fetchone()[0]}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —à–∫–æ–ª
        cursor.execute("SELECT name, domain, is_active FROM school_sites ORDER BY name")
        schools = cursor.fetchall()
        if schools:
            print("\nüìö –°–ø–∏—Å–æ–∫ —Å–∞–π—Ç–æ–≤ —à–∫–æ–ª-–∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤:")
            for school in schools:
                status = "‚úÖ" if school[2] else "‚è∏Ô∏è"
                print(f"   {status} {school[0]}: {school[1]}")
        
        cursor.close()
        print("\n‚ú® –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!")
        print("   –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å SERP –∞–Ω–∞–ª–∏–∑ —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º —Å–∞–π—Ç–æ–≤ —à–∫–æ–ª")
        
        return True
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {str(e)}")
        if connection:
            connection.rollback()
        return False
        
    finally:
        if connection:
            connection.close()


if __name__ == "__main__":
    print("=" * 50)
    print("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –¥–ª—è SERP –∞–Ω–∞–ª–∏–∑–∞")
    print("=" * 50)
    
    success = create_serp_tables()
    
    if success:
        print("\n" + "=" * 50)
        print("‚úÖ –°–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        print("=" * 50)
        sys.exit(0)
    else:
        print("\n" + "=" * 50)
        print("‚ùå –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —Å –æ—à–∏–±–∫–∞–º–∏")
        print("=" * 50)
        sys.exit(1)