#!/usr/bin/env python3
# backend/update_db_serp_fields.py
"""
–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª–µ–π SERP –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤ —Ç–∞–±–ª–∏—Ü—É keywords
–ó–∞–ø—É—Å–∫: python3 update_db_serp_fields.py
"""

import sys
import pymysql
from config import Config
from datetime import datetime

def update_database():
    """–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ë–î –¥–ª—è SERP –ø–æ–ª–µ–π"""
    connection = None
    
    try:
        print(f"\n{'='*60}")
        print(f"üöÄ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ë–î: –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ SERP –ø–æ–ª–µ–π")
        print(f"üìÖ {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
        print(f"{'='*60}\n")
        
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
        print(f"üìä –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ {Config.DB_HOST}:{Config.DB_PORT}/{Config.DB_NAME}...")
        connection = pymysql.connect(
            host=Config.DB_HOST,
            port=Config.DB_PORT,
            user=Config.DB_USER,
            password=Config.DB_PASSWORD,
            database=Config.DB_NAME,
            cursorclass=pymysql.cursors.DictCursor
        )
        cursor = connection.cursor()
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ\n")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏
        cursor.execute("SHOW COLUMNS FROM keywords")
        existing_columns = {row['Field'] for row in cursor.fetchall()}
        
        changes_made = []
        
        # 1. –î–æ–±–∞–≤–ª—è–µ–º last_serp_check
        if 'last_serp_check' not in existing_columns:
            print("‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ last_serp_check...")
            cursor.execute("""
                ALTER TABLE keywords 
                ADD COLUMN last_serp_check DATETIME DEFAULT NULL 
                COMMENT '–î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π SERP –ø—Ä–æ–≤–µ—Ä–∫–∏'
            """)
            changes_made.append('last_serp_check')
            print("   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞\n")
        else:
            print("   ‚ÑπÔ∏è  last_serp_check —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        # 2. –î–æ–±–∞–≤–ª—è–µ–º serp_position
        if 'serp_position' not in existing_columns:
            print("‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ serp_position...")
            cursor.execute("""
                ALTER TABLE keywords 
                ADD COLUMN serp_position INT DEFAULT NULL 
                COMMENT '–ü–æ–∑–∏—Ü–∏—è –≤ SERP (rank_absolute)'
            """)
            changes_made.append('serp_position')
            print("   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞\n")
        else:
            print("   ‚ÑπÔ∏è  serp_position —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∏–Ω–¥–µ–∫—Å—ã
        cursor.execute("SHOW INDEX FROM keywords")
        existing_indexes = {row['Key_name'] for row in cursor.fetchall()}
        
        if 'idx_last_serp_check' not in existing_indexes:
            print("‚ûï –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–∞ idx_last_serp_check...")
            cursor.execute("ALTER TABLE keywords ADD INDEX idx_last_serp_check (last_serp_check)")
            changes_made.append('idx_last_serp_check')
            print("   ‚úÖ –°–æ–∑–¥–∞–Ω\n")
        else:
            print("   ‚ÑπÔ∏è  idx_last_serp_check —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        if 'idx_serp_position' not in existing_indexes:
            print("‚ûï –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–∞ idx_serp_position...")
            cursor.execute("ALTER TABLE keywords ADD INDEX idx_serp_position (serp_position)")
            changes_made.append('idx_serp_position')
            print("   ‚úÖ –°–æ–∑–¥–∞–Ω\n")
        else:
            print("   ‚ÑπÔ∏è  idx_serp_position —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        connection.commit()
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        print(f"\n{'='*60}")
        if changes_made:
            print(f"‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π: {len(changes_made)}")
            for item in changes_made:
                print(f"   ‚Ä¢ {item}")
        else:
            print("‚úÖ –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —É–∂–µ –±—ã–ª–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã —Ä–∞–Ω–µ–µ")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        cursor.execute("""
            SELECT 
                COUNT(*) as total,
                SUM(CASE WHEN last_serp_check IS NOT NULL THEN 1 ELSE 0 END) as checked,
                SUM(CASE WHEN serp_position IS NOT NULL THEN 1 ELSE 0 END) as with_position
            FROM keywords
        """)
        stats = cursor.fetchone()
        
        print(f"\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ keywords:")
        print(f"   –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {stats['total']}")
        print(f"   –° SERP –ø—Ä–æ–≤–µ—Ä–∫–æ–π: {stats['checked']}")
        print(f"   –° –ø–æ–∑–∏—Ü–∏–µ–π: {stats['with_position']}")
        
        cursor.close()
        print(f"\n{'='*60}")
        print("‚ú® –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
        print(f"{'='*60}\n")
        
        return True
        
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê: {str(e)}")
        if connection:
            connection.rollback()
        return False
        
    finally:
        if connection:
            connection.close()

if __name__ == "__main__":
    success = update_database()
    sys.exit(0 if success else 1)