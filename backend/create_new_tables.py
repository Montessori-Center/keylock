#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ú–∏–≥—Ä–∞—Ü–∏—è: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –¥–ª—è —à–∫–æ–ª-–∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –∏ SERP-–∞–Ω–∞–ª–∏–∑–∞
–§–∞–π–ª: backend/migrations/add_competitors_tables.py
"""

import pymysql
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω—é –ø—Ä–æ–µ–∫—Ç–∞
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from config import Config

def run_migration():
    """–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏"""
    print("=" * 70)
    print("–ú–ò–ì–†–ê–¶–ò–Ø: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤")
    print("=" * 70)
    
    connection = None
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
        connection = pymysql.connect(
            host=Config.DB_HOST,
            port=Config.DB_PORT,
            user=Config.DB_USER,
            password=Config.DB_PASSWORD,
            database=Config.DB_NAME,
            cursorclass=pymysql.cursors.DictCursor
        )
        cursor = connection.cursor()
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        
        # 1. –¢–∞–±–ª–∏—Ü–∞ campaign_sites (–¥–æ–º–µ–Ω—ã –Ω–∞—à–∏—Ö —Å–∞–π—Ç–æ–≤)
        print("\nüìù –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã campaign_sites...")
        cursor.execute("""
            CREATE TABLE IF NOT EXISTS campaign_sites (
                id INT AUTO_INCREMENT PRIMARY KEY,
                campaign_id INT NOT NULL,
                site_url VARCHAR(500),
                domain VARCHAR(255),
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
                UNIQUE KEY unique_campaign (campaign_id),
                FOREIGN KEY (campaign_id) REFERENCES campaigns(id) ON DELETE CASCADE
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
        """)
        print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ campaign_sites —Å–æ–∑–¥–∞–Ω–∞")
        
        # 2. –¢–∞–±–ª–∏—Ü–∞ school_sites (—Å—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è, –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
        print("\nüìù –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã school_sites...")
        cursor.execute("""
            CREATE TABLE IF NOT EXISTS school_sites (
                id INT AUTO_INCREMENT PRIMARY KEY,
                domain VARCHAR(255) NOT NULL UNIQUE,
                is_active BOOLEAN DEFAULT TRUE,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
                INDEX idx_domain (domain),
                INDEX idx_active (is_active)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
        """)
        print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ school_sites —Å–æ–∑–¥–∞–Ω–∞")
        
        # 3. –û—Å–Ω–æ–≤–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ competitor_schools
        print("\nüìù –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã competitor_schools...")
        cursor.execute("""
            CREATE TABLE IF NOT EXISTS competitor_schools (
                id INT AUTO_INCREMENT PRIMARY KEY,
                domain VARCHAR(255) NOT NULL UNIQUE,
                org_type ENUM('–®–∫–æ–ª–∞', '–ë–∞–∑–∞ —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–æ–≤', '–ù–µ —à–∫–æ–ª–∞', '–ü–∞—Ä—Ç–Ω—ë—Ä') DEFAULT '–®–∫–æ–ª–∞',
                competitiveness INT DEFAULT 0 COMMENT '–ß–∞—Å—Ç–æ—Ç–∞ –ø–æ—è–≤–ª–µ–Ω–∏–π –≤ SERP',
                last_seen_at TIMESTAMP NULL COMMENT '–ü–æ—Å–ª–µ–¥–Ω–µ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ –≤ SERP',
                notes TEXT COMMENT '–ó–∞–º–µ—Ç–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
                INDEX idx_domain (domain),
                INDEX idx_org_type (org_type),
                INDEX idx_competitiveness (competitiveness)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
        """)
        print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ competitor_schools —Å–æ–∑–¥–∞–Ω–∞")
        
        # 4. –¢–∞–±–ª–∏—Ü–∞ –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏ SERP-–∞–Ω–∞–ª–∏–∑–æ–≤
        print("\nüìù –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã serp_analysis_history...")
        cursor.execute("""
            CREATE TABLE IF NOT EXISTS serp_analysis_history (
                id INT AUTO_INCREMENT PRIMARY KEY,
                keyword_id INT NOT NULL,
                keyword_text VARCHAR(500) NOT NULL,
                campaign_id INT NOT NULL,
                analysis_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                has_ads BOOLEAN DEFAULT FALSE,
                has_maps BOOLEAN DEFAULT FALSE,
                has_our_site BOOLEAN DEFAULT FALSE,
                has_school_sites BOOLEAN DEFAULT FALSE,
                intent_type VARCHAR(50),
                organic_count INT DEFAULT 0,
                paid_count INT DEFAULT 0,
                maps_count INT DEFAULT 0,
                school_percentage DECIMAL(5,2) DEFAULT 0,
                cost DECIMAL(10, 4) DEFAULT 0,
                parsed_items JSON COMMENT 'JSON —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏',
                analysis_result JSON COMMENT 'JSON —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∞–Ω–∞–ª–∏–∑–∞',
                FOREIGN KEY (keyword_id) REFERENCES keywords(id) ON DELETE CASCADE,
                FOREIGN KEY (campaign_id) REFERENCES campaigns(id) ON DELETE CASCADE,
                INDEX idx_keyword_id (keyword_id),
                INDEX idx_analysis_date (analysis_date)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
        """)
        print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ serp_analysis_history —Å–æ–∑–¥–∞–Ω–∞")
        
        # 5. –¢–∞–±–ª–∏—Ü–∞ —Å–≤—è–∑–µ–π: –∫–∞–∫–∏–µ –¥–æ–º–µ–Ω—ã –Ω–∞–π–¥–µ–Ω—ã –≤ –∫–∞–∫–∏—Ö SERP-–∞–Ω–∞–ª–∏–∑–∞—Ö
        print("\nüìù –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã serp_competitor_appearances...")
        cursor.execute("""
            CREATE TABLE IF NOT EXISTS serp_competitor_appearances (
                id INT AUTO_INCREMENT PRIMARY KEY,
                serp_analysis_id INT NOT NULL,
                competitor_id INT NOT NULL,
                position INT COMMENT '–ü–æ–∑–∏—Ü–∏—è –≤ –≤—ã–¥–∞—á–µ',
                result_type ENUM('organic', 'paid', 'maps') DEFAULT 'organic',
                url TEXT COMMENT '–ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π URL',
                title TEXT COMMENT '–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞',
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (serp_analysis_id) REFERENCES serp_analysis_history(id) ON DELETE CASCADE,
                FOREIGN KEY (competitor_id) REFERENCES competitor_schools(id) ON DELETE CASCADE,
                INDEX idx_serp_analysis (serp_analysis_id),
                INDEX idx_competitor (competitor_id)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
        """)
        print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ serp_competitor_appearances —Å–æ–∑–¥–∞–Ω–∞")
        
        # 6. –ú–∏–≥—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ school_sites –≤ competitor_schools (–µ—Å–ª–∏ –µ—Å—Ç—å)
        print("\nüìù –ú–∏–≥—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ school_sites –≤ competitor_schools...")
        cursor.execute("""
            INSERT IGNORE INTO competitor_schools (domain, org_type, created_at)
            SELECT domain, '–®–∫–æ–ª–∞', created_at
            FROM school_sites
            WHERE is_active = TRUE
        """)
        migrated = cursor.rowcount
        print(f"‚úÖ –ú–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–æ –∑–∞–ø–∏—Å–µ–π: {migrated}")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        connection.commit()
        print("\n" + "=" * 70)
        print("‚úÖ –ú–ò–ì–†–ê–¶–ò–Ø –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù–ê!")
        print("=" * 70)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã
        print("\nüìä –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã:")
        cursor.execute("SHOW TABLES")
        all_tables = cursor.fetchall()
        
        relevant_tables = []
        for table in all_tables:
            table_name = list(table.values())[0]
            if any(keyword in table_name for keyword in ['competitor', 'serp', 'campaign_sites', 'school_sites']):
                relevant_tables.append(table_name)
                print(f"   ‚Ä¢ {table_name}")
        
        if not relevant_tables:
            print("   ‚ö†Ô∏è –¢–∞–±–ª–∏—Ü—ã –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        else:
            print(f"\n‚úÖ –í—Å–µ–≥–æ —Å–æ–∑–¥–∞–Ω–æ —Ç–∞–±–ª–∏—Ü –¥–ª—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤: {len(relevant_tables)}")
        
        cursor.close()
        return True
        
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê –ú–ò–ì–†–ê–¶–ò–ò: {e}")
        if connection:
            connection.rollback()
        import traceback
        traceback.print_exc()
        return False
        
    finally:
        if connection:
            connection.close()
            print("\nüîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î –∑–∞–∫—Ä—ã—Ç–æ")

if __name__ == '__main__':
    print("\nüöÄ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏...")
    success = run_migration()
    
    if success:
        print("\n‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        sys.exit(0)
    else:
        print("\n‚ùå –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–∞–º–∏!")
        sys.exit(1)