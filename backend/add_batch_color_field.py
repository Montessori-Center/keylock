# backend/add_batch_color_field.py - —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—è batch_color
import pymysql
from config import Config

def add_batch_color_field():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª–µ batch_color –≤ —Ç–∞–±–ª–∏—Ü—É keywords"""
    try:
        connection = pymysql.connect(
            host=Config.DB_HOST,
            port=Config.DB_PORT,
            user=Config.DB_USER,
            password=Config.DB_PASSWORD,
            database=Config.DB_NAME
        )
        cursor = connection.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –ø–æ–ª–µ batch_color
        cursor.execute("""
            SELECT COLUMN_NAME 
            FROM INFORMATION_SCHEMA.COLUMNS 
            WHERE TABLE_SCHEMA = %s 
            AND TABLE_NAME = 'keywords' 
            AND COLUMN_NAME = 'batch_color'
        """, (Config.DB_NAME,))
        
        result = cursor.fetchone()
        
        if not result:
            print("üé® –ü–æ–ª–µ batch_color –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –¥–æ–±–∞–≤–ª—è—é...")
            
            cursor.execute("""
                ALTER TABLE keywords 
                ADD COLUMN batch_color VARCHAR(10) DEFAULT NULL
                COMMENT '–¶–≤–µ—Ç –ø–∞—Ä—Ç–∏–∏ –¥–ª—è –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π'
            """)
            connection.commit()
            print("‚úÖ –ü–æ–ª–µ batch_color —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ")
        else:
            print("‚úÖ –ü–æ–ª–µ batch_color —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        cursor.close()
        connection.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    add_batch_color_field()